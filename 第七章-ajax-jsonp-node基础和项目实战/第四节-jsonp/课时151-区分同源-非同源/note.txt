JSONP和ajax相同，都是客户端向服务器端发送请求: 给服务器端传递内容 或者从服务器端获取数据 的方式

ajax属于同源策略
JSONP属于非同源策略(跨域请求) -> 实现跨域请求的方式有很多种，只不过JSONP是最常用的

-> 当前页面的URL地址(WB在预览页面的时候会默认的创建一个本地虚拟的服务,端口号是63342) /1.html

区分同源和非同源:
用当前页面的地址 && 数据请求的接口地址
1) 协议
2) 域名或者IP
3) 端口号
以上三部分完全相同，则属于同源策略，此时使用ajax技术获取数据;
只要有一个不一样，就属于非同源策略，一般使用JSONP获取数据

-> 需要在1.html中做一件事情:
   [把本地同一个服务下的data.txt中的内容获取到]
   需要请求的地址 /data.txt

   [获取腾讯体育项目中的数据]

JSONP的原理(JSONP请求一定需要对方的服务器支持才可以):
-> 在script世界中，没有同源跨域这么一说，只要src属性中的地址是一个合法的地址，script都可以吧对应的内容请求回来

-> JSONP就是利用了script的这个原理:
   1) 首先把需求请求数据的那个跨域的API数据接口地址赋值给script的src
   2) 把当前页面中的某一个函数名当做参数值，传递给需要跨域请求数据的服务器(URL问好传参: ?callback=fn)
   3) 腾讯服务器接受到请求后，需要进行特殊的处理: 把传递进来的函数名和对应的数据拼接成字符串，例如:传递进去的函数名是fn，它准备好的数据是
   'fn([{"name":"derrick"}])' -> '传递的函数名(需要给我们的数据)'
   4) 最后腾讯的服务器把准备的数据通过HTTP协议返回给客户端，客户端发现其实就是让fn直行，而且还给fn传递了一堆的数据，那些数据就是我们想要
      的数据